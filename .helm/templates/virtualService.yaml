apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ .Values.service | quote }}
  labels:
    app.kubernetes.io/name: {{ .Values.service | quote }}
    app.kubernetes.io/part-of: {{ .Values.system | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
  namespace: {{ .Release.Namespace | quote }}
spec:
{{- if .Values.ingressGateway.enabled }}
  gateways:
    - {{ .Values.ingressGateway.name | quote }}
{{- end }}    
  hosts:
{{- if .Values.ingressGateway.enabled }}
    - {{ .Values.ingressGateway.host | quote }}
{{- else }}
    - {{ (print .Values.service "." .Release.Namespace ".svc.cluster.local") | quote }}
{{- end }}
  http:
{{- if .Values.ingressGateway.enabled }}
    - match:
{{- range .Values.ingressGateway.matchPrefix }}
      - uri:
          prefix: {{ . | quote }}
{{- end }}
      rewrite:
        uri: "/"
      route:
      - destination:
          host: {{ (print .Values.service "." .Release.Namespace ".svc.cluster.local") | quote }}
          subset: {{ (print "v" .Values.version) | quote }}
{{- else }}
    - route:
      - destination:
          host: {{ (print .Values.service "." .Release.Namespace ".svc.cluster.local") | quote }}
          subset: {{ (print "v" .Values.version) | quote }}
{{- end }}